{"name":"Stock-beta2","tagline":"","body":"library(quantmod)\r\nlibrary(ggplot2)\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"CAPM for Desired Stock\"),\r\n  \r\n  sidebarLayout(\r\n    sidebarPanel(color = 'cadetblue4',\r\n                 helpText(\"Input a ticker and see the stock's regression to market and expected return.\"),\r\n                 \r\n                 textInput(\"symb\", label = h4(\"Input a Valid Stock Ticker\"), value = \"GE\"),\r\n                 textInput(\"symb2\", label = h4(\"Input a Valid Stock Ticker\"), value = \"XOM\"),\r\n                 dateRangeInput(\"date\", label = h4(\"Input Date Range for Returns\"), start = '2007-01-01', end = as.character(Sys.Date())),\r\n                 helpText(\"Date Format: [YYYY/MM/DD]\")\r\n    ),\r\n    \r\n    mainPanel(\r\n      tabsetPanel(\r\n        tabPanel(\"Market Regression\", plotOutput(\"plot\"),h4(textOutput('beta'))),\r\n        tabPanel(\"Expected Return\",  plotOutput(\"SML\"), textOutput(\"eRmath\"), helpText(\"[eR = rF + Beta(mR - rF)]\"))\r\n        \r\n      )\r\n    ))\r\n)\r\n\r\n\r\n\r\n\r\nserver <- function(input, output) {\r\n  dataInput <- reactive({\r\n    validate(\r\n      need(input$symb != \"\", \"Please type a ticker\"),\r\n      need(input$date[1] < input$date[2], 'Start date is either missing or is later than end date.')\r\n    )\r\n    \r\n    options(download.file.method=\"wininet\")\r\n    prices <- getSymbols(input$symb, from = input$date[1], to = input$date[2], auto.assign = FALSE)\r\n    prices2 <- getSymbols(input$symb2, from = input$date[1], to = input$date[2], auto.assign = FALSE)\r\n    market <- getSymbols(\"^GSPC\", from = input$date[1], to = input$date[2], auto.assign = FALSE)\r\n    t <- getSymbols.FRED(\"TB1YR\", auto.assign = FALSE)\r\n    dataPrices <- merge.xts(Ad(prices), Ad(market), Ad(prices2), join = \"inner\")\r\n    \r\n    stock <- dataPrices[,1]\r\n    mm <- dataPrices [,2]\r\n    sReturns <- Delt(stock)[-1]\r\n    mmReturns <- Delt(mm)[-1]\r\n    reg <- lm((sReturns) ~ (mmReturns))\r\n    \r\n    \r\n    \r\n    stock2 <- dataPrices[,3]\r\n    sReturns2 <- Delt(stock2)[-1]\r\n    reg2 <- lm((sReturns2) ~ (mmReturns))\r\n    \r\n    \r\n    \r\n    \r\n    rMM <- mean(mmReturns)*365\r\n    rF <- as.vector(t[length(t)])/100\r\n    rI <- rF +  reg$coefficients[2] * (rMM - rF)\r\n    theData <- list(x = data.frame(cbind(as.vector(sReturns), as.vector(mmReturns), as.vector(sReturns2))), y = reg, z = rI[length(rI)], rF = rF, rMM = rMM, reg2 = reg2)\r\n    \r\n  })\r\n  \r\n  \r\n  output$plot <- renderPlot({\r\n    \r\n    theData <- dataInput()\r\n    qplot(theData$x[,2], theData$x[,1], ylab = \"Asset Returns\", xlab = \"Market Returns\") +    \r\n      geom_abline(intercept =theData$y$coef[1], slope = theData$y$coef[2], color = \"grey23\") +\r\n      geom_abline(intercept =theData$reg2$coef[1], slope = theData$reg2$coef[2], color = \"green\") +\r\n      labs(title = \"Market Regression\")+\r\n      geom_point(color = \"cadetblue4\") \r\n    \r\n    \r\n  })\r\n  \r\n  output$eRmath <- renderText({\r\n    theData <- dataInput()\r\n    return(paste(\"Expected Return:\", round(theData$z*100, 2), \"%\", \" = \", round(theData$rF*100, 2), \"%\", \"+\", round(theData$y$coefficients[2], 2), \"(\", round(100*theData$rMM,2), \"%\", \"-\", round(theData$rF*100, 2), \"%\",\")\"))\r\n  })\r\n  \r\n  output$SML <- renderPlot({\r\n    theData <- dataInput()\r\n    qplot(theData$y$coef[2], theData$z, ylim = c(0, .15), xlim = c(0, 2), ylab = \"Expected Return\", xlab = \"Beta\") +\r\n      geom_abline(intercept =theData$rF, slope = ((theData$z - theData$rF)/theData$y$coef[2])) +\r\n      labs(title = \"Security Market Line\") +\r\n      geom_point(color = \"cadetblue4\", size = 3.5)\r\n    \r\n  })\r\n  \r\n  output$beta <- renderText({\r\n    theData <- dataInput()\r\n    paste(\"    Beta:  \", round(theData$y$coef[2], 2))\r\n    \r\n  })\r\n}\r\n\r\n\r\nshinyApp(ui = ui, server = server)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}